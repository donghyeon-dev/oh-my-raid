# Docker-compose to set omr dev environment
name: omr-service

version: '2'
services:
  #Mysql
  database:
    image: mysql
    container_name: omr-mysql
    ports:
      - "43306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${OMR_MYSQL_PASSWORD}
      TZ : Asia/Seoul
    command: [ '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
    volumes:
      - /Users/autocat/dev/Personal/docker-mysql

  #Redis
  redis:
    image: redis
    container_name: omr-redis
    ports:
      - "46379:6379"
  #Prometheus

  prometheus:
    container_name: omr-prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - /Users/autocat/dev/Personal/omr/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always

  #Grafana
  grafana:
    container_name: omr-grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - /Users/autocat/dev/Personal/docker-volume/grafana:/config_files
    restart: always
    depends_on:
      - prometheus
    privileged: true
  # zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: zookeper-1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"
  # kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://${EXTERNAL_HOST}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1




